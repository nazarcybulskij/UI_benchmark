"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getChromeVersion = getChromeVersion;
exports.getChromedriverDir = getChromedriverDir;
exports.getChromedriverBinaryPath = getChromedriverBinaryPath;
exports.getCurPlatform = getCurPlatform;
exports.getPlatforms = getPlatforms;
exports.LINUX_32_ONLY = exports.MAC_32_ONLY = exports.CD_BASE_DIR = void 0;

require("source-map-support/register");

var _appiumSupport = require("appium-support");

var _path = _interopRequireDefault(require("path"));

var _chromedriver = require("./chromedriver");

var _semver = _interopRequireDefault(require("semver"));

const CD_BASE_DIR = _path.default.resolve(__dirname, '..', '..', 'chromedriver');

exports.CD_BASE_DIR = CD_BASE_DIR;
const MAC_32_ONLY = '2.23.0';
exports.MAC_32_ONLY = MAC_32_ONLY;
const LINUX_32_ONLY = '2.34.0';
exports.LINUX_32_ONLY = LINUX_32_ONLY;

async function getChromeVersion(adb, bundleId) {
  const {
    versionName
  } = await adb.getPackageInfo(bundleId);
  return versionName;
}

function getChromedriverDir(platform = getCurPlatform()) {
  return _path.default.resolve(CD_BASE_DIR, platform);
}

async function getChromedriverBinaryPath(platform = getCurPlatform(), arch = null) {
  const baseDir = getChromedriverDir(platform);
  let ext = '';

  if (platform === 'win') {
    ext = '.exe';
  } else if (platform === 'linux') {
    ext = `_${arch || (await _appiumSupport.system.arch())}`;
  }

  return _path.default.resolve(baseDir, `chromedriver${ext}`);
}

function getCurPlatform() {
  return _appiumSupport.system.isWindows() ? 'win' : _appiumSupport.system.isMac() ? 'mac' : 'linux';
}

function getPlatforms() {
  let plats = [['win', '32'], ['linux', '64']];

  const cdVer = _semver.default.coerce(_chromedriver.CD_VER);

  plats.push(_semver.default.lt(cdVer, MAC_32_ONLY) ? ['mac', '32'] : ['mac', '64']);

  if (_semver.default.lt(cdVer, LINUX_32_ONLY)) {
    plats.push(['linux', '32']);
  }

  return plats;
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi91dGlscy5qcyJdLCJuYW1lcyI6WyJDRF9CQVNFX0RJUiIsInBhdGgiLCJyZXNvbHZlIiwiX19kaXJuYW1lIiwiTUFDXzMyX09OTFkiLCJMSU5VWF8zMl9PTkxZIiwiZ2V0Q2hyb21lVmVyc2lvbiIsImFkYiIsImJ1bmRsZUlkIiwidmVyc2lvbk5hbWUiLCJnZXRQYWNrYWdlSW5mbyIsImdldENocm9tZWRyaXZlckRpciIsInBsYXRmb3JtIiwiZ2V0Q3VyUGxhdGZvcm0iLCJnZXRDaHJvbWVkcml2ZXJCaW5hcnlQYXRoIiwiYXJjaCIsImJhc2VEaXIiLCJleHQiLCJzeXN0ZW0iLCJpc1dpbmRvd3MiLCJpc01hYyIsImdldFBsYXRmb3JtcyIsInBsYXRzIiwiY2RWZXIiLCJzZW12ZXIiLCJjb2VyY2UiLCJDRF9WRVIiLCJwdXNoIiwibHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFHQSxNQUFNQSxXQUFXLEdBQUdDLGNBQUtDLE9BQUwsQ0FBYUMsU0FBYixFQUF3QixJQUF4QixFQUE4QixJQUE5QixFQUFvQyxjQUFwQyxDQUFwQjs7O0FBRUEsTUFBTUMsV0FBVyxHQUFHLFFBQXBCOztBQUNBLE1BQU1DLGFBQWEsR0FBRyxRQUF0Qjs7O0FBRUEsZUFBZUMsZ0JBQWYsQ0FBaUNDLEdBQWpDLEVBQXNDQyxRQUF0QyxFQUFnRDtBQUM5QyxRQUFNO0FBQUNDLElBQUFBO0FBQUQsTUFBZ0IsTUFBTUYsR0FBRyxDQUFDRyxjQUFKLENBQW1CRixRQUFuQixDQUE1QjtBQUNBLFNBQU9DLFdBQVA7QUFDRDs7QUFFRCxTQUFTRSxrQkFBVCxDQUE2QkMsUUFBUSxHQUFHQyxjQUFjLEVBQXRELEVBQTBEO0FBQ3hELFNBQU9aLGNBQUtDLE9BQUwsQ0FBYUYsV0FBYixFQUEwQlksUUFBMUIsQ0FBUDtBQUNEOztBQUVELGVBQWVFLHlCQUFmLENBQTBDRixRQUFRLEdBQUdDLGNBQWMsRUFBbkUsRUFBdUVFLElBQUksR0FBRyxJQUE5RSxFQUFvRjtBQUNsRixRQUFNQyxPQUFPLEdBQUdMLGtCQUFrQixDQUFDQyxRQUFELENBQWxDO0FBQ0EsTUFBSUssR0FBRyxHQUFHLEVBQVY7O0FBQ0EsTUFBSUwsUUFBUSxLQUFLLEtBQWpCLEVBQXdCO0FBQ3RCSyxJQUFBQSxHQUFHLEdBQUcsTUFBTjtBQUNELEdBRkQsTUFFTyxJQUFJTCxRQUFRLEtBQUssT0FBakIsRUFBMEI7QUFDL0JLLElBQUFBLEdBQUcsR0FBSSxJQUFHRixJQUFJLEtBQUksTUFBTUcsc0JBQU9ILElBQVAsRUFBVixDQUF3QixFQUF0QztBQUNEOztBQUVELFNBQU9kLGNBQUtDLE9BQUwsQ0FBYWMsT0FBYixFQUF1QixlQUFjQyxHQUFJLEVBQXpDLENBQVA7QUFDRDs7QUFFRCxTQUFTSixjQUFULEdBQTJCO0FBQ3pCLFNBQU9LLHNCQUFPQyxTQUFQLEtBQXFCLEtBQXJCLEdBQThCRCxzQkFBT0UsS0FBUCxLQUFpQixLQUFqQixHQUF5QixPQUE5RDtBQUNEOztBQUVELFNBQVNDLFlBQVQsR0FBeUI7QUFDdkIsTUFBSUMsS0FBSyxHQUFHLENBQ1YsQ0FBQyxLQUFELEVBQVEsSUFBUixDQURVLEVBRVYsQ0FBQyxPQUFELEVBQVUsSUFBVixDQUZVLENBQVo7O0FBSUEsUUFBTUMsS0FBSyxHQUFHQyxnQkFBT0MsTUFBUCxDQUFjQyxvQkFBZCxDQUFkOztBQUVBSixFQUFBQSxLQUFLLENBQUNLLElBQU4sQ0FBV0gsZ0JBQU9JLEVBQVAsQ0FBVUwsS0FBVixFQUFpQm5CLFdBQWpCLElBQWdDLENBQUMsS0FBRCxFQUFRLElBQVIsQ0FBaEMsR0FBZ0QsQ0FBQyxLQUFELEVBQVEsSUFBUixDQUEzRDs7QUFFQSxNQUFJb0IsZ0JBQU9JLEVBQVAsQ0FBVUwsS0FBVixFQUFpQmxCLGFBQWpCLENBQUosRUFBcUM7QUFDbkNpQixJQUFBQSxLQUFLLENBQUNLLElBQU4sQ0FBVyxDQUFDLE9BQUQsRUFBVSxJQUFWLENBQVg7QUFDRDs7QUFDRCxTQUFPTCxLQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzeXN0ZW0gfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IENEX1ZFUiB9IGZyb20gJy4vY2hyb21lZHJpdmVyJztcbmltcG9ydCBzZW12ZXIgZnJvbSAnc2VtdmVyJztcblxuXG5jb25zdCBDRF9CQVNFX0RJUiA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLicsICcuLicsICdjaHJvbWVkcml2ZXInKTtcblxuY29uc3QgTUFDXzMyX09OTFkgPSAnMi4yMy4wJztcbmNvbnN0IExJTlVYXzMyX09OTFkgPSAnMi4zNC4wJztcblxuYXN5bmMgZnVuY3Rpb24gZ2V0Q2hyb21lVmVyc2lvbiAoYWRiLCBidW5kbGVJZCkge1xuICBjb25zdCB7dmVyc2lvbk5hbWV9ID0gYXdhaXQgYWRiLmdldFBhY2thZ2VJbmZvKGJ1bmRsZUlkKTtcbiAgcmV0dXJuIHZlcnNpb25OYW1lO1xufVxuXG5mdW5jdGlvbiBnZXRDaHJvbWVkcml2ZXJEaXIgKHBsYXRmb3JtID0gZ2V0Q3VyUGxhdGZvcm0oKSkge1xuICByZXR1cm4gcGF0aC5yZXNvbHZlKENEX0JBU0VfRElSLCBwbGF0Zm9ybSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENocm9tZWRyaXZlckJpbmFyeVBhdGggKHBsYXRmb3JtID0gZ2V0Q3VyUGxhdGZvcm0oKSwgYXJjaCA9IG51bGwpIHtcbiAgY29uc3QgYmFzZURpciA9IGdldENocm9tZWRyaXZlckRpcihwbGF0Zm9ybSk7XG4gIGxldCBleHQgPSAnJztcbiAgaWYgKHBsYXRmb3JtID09PSAnd2luJykge1xuICAgIGV4dCA9ICcuZXhlJztcbiAgfSBlbHNlIGlmIChwbGF0Zm9ybSA9PT0gJ2xpbnV4Jykge1xuICAgIGV4dCA9IGBfJHthcmNoIHx8IGF3YWl0IHN5c3RlbS5hcmNoKCl9YDtcbiAgfVxuXG4gIHJldHVybiBwYXRoLnJlc29sdmUoYmFzZURpciwgYGNocm9tZWRyaXZlciR7ZXh0fWApO1xufVxuXG5mdW5jdGlvbiBnZXRDdXJQbGF0Zm9ybSAoKSB7XG4gIHJldHVybiBzeXN0ZW0uaXNXaW5kb3dzKCkgPyAnd2luJyA6IChzeXN0ZW0uaXNNYWMoKSA/ICdtYWMnIDogJ2xpbnV4Jyk7XG59XG5cbmZ1bmN0aW9uIGdldFBsYXRmb3JtcyAoKSB7XG4gIGxldCBwbGF0cyA9IFtcbiAgICBbJ3dpbicsICczMiddLFxuICAgIFsnbGludXgnLCAnNjQnXSxcbiAgXTtcbiAgY29uc3QgY2RWZXIgPSBzZW12ZXIuY29lcmNlKENEX1ZFUik7XG4gIC8vIGJlZm9yZSAyLjIzIE1hYyB2ZXJzaW9uIHdhcyAzMiBiaXQuIEFmdGVyIGl0IGlzIDY0LlxuICBwbGF0cy5wdXNoKHNlbXZlci5sdChjZFZlciwgTUFDXzMyX09OTFkpID8gWydtYWMnLCAnMzInXSA6IFsnbWFjJywgJzY0J10pO1xuICAvLyAyLjM0IGFuZCBhYm92ZSBsaW51eCBpcyBvbmx5IHN1cHBvcnRpbmcgNjQgYml0XG4gIGlmIChzZW12ZXIubHQoY2RWZXIsIExJTlVYXzMyX09OTFkpKSB7XG4gICAgcGxhdHMucHVzaChbJ2xpbnV4JywgJzMyJ10pO1xuICB9XG4gIHJldHVybiBwbGF0cztcbn1cblxuZXhwb3J0IHtcbiAgZ2V0Q2hyb21lVmVyc2lvbiwgZ2V0Q2hyb21lZHJpdmVyRGlyLCBnZXRDaHJvbWVkcml2ZXJCaW5hcnlQYXRoLFxuICBnZXRDdXJQbGF0Zm9ybSwgZ2V0UGxhdGZvcm1zLCBDRF9CQVNFX0RJUiwgTUFDXzMyX09OTFksIExJTlVYXzMyX09OTFksXG59O1xuIl0sImZpbGUiOiJsaWIvdXRpbHMuanMiLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
